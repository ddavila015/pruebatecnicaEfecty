//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace webapi.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TESTEntities : DbContext
    {
        public TESTEntities()
            : base("name=TESTEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Usuario> Usuario { get; set; }
    
        public virtual ObjectResult<SP_insertUsuario_Result> SP_insertUsuario(string nombre, string apellido, Nullable<int> tipoDoc, Nullable<decimal> valor, Nullable<int> estadoCivil, string fecha)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var tipoDocParameter = tipoDoc.HasValue ?
                new ObjectParameter("tipoDoc", tipoDoc) :
                new ObjectParameter("tipoDoc", typeof(int));
    
            var valorParameter = valor.HasValue ?
                new ObjectParameter("valor", valor) :
                new ObjectParameter("valor", typeof(decimal));
    
            var estadoCivilParameter = estadoCivil.HasValue ?
                new ObjectParameter("estadoCivil", estadoCivil) :
                new ObjectParameter("estadoCivil", typeof(int));
    
            var fechaParameter = fecha != null ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_insertUsuario_Result>("SP_insertUsuario", nombreParameter, apellidoParameter, tipoDocParameter, valorParameter, estadoCivilParameter, fechaParameter);
        }
    
        public virtual ObjectResult<SP_getUser_Result> SP_getUser(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_getUser_Result>("SP_getUser", nombreParameter);
        }
    }
}
